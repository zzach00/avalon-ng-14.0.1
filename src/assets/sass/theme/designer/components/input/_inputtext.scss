.p-inputtext {
    font-family: $fontFamily;
    font-weight: $fw-body1;
    font-size: $fs-body1;
    line-height: $lh-body1;
    letter-spacing: $ls-body1;
    color: $color-neutral-D6;
    background: $color-neutral-M1;
    // height: $inputtext-height-lg;
    padding: $inputtext-padding-lg;
    border: none;
    transition: $formElementTransition;
    appearance: none;
    border-radius: $inputtext-border-radius;
    
    &:hover {
        outline: $inputtext-border-size-1 solid $color-primary-2;
    }
    
    &:focus {
        outline: $inputtext-border-size-2 solid $color-primary-D3 !important;
        background-color: $color-neutral-L6;
    }
    
    &.ng-dirty.ng-invalid {
        // @include invalid-input();
        outline: $inputtext-border-size-1 solid var(--red-500);
        background-color: $color-neutral-L6;
    }
    
    &.p-inputtext-sm {
        // @include scaledFontSize($inputTextFontSize, $scaleSM);
        // @include scaledPadding($inputPadding, $scaleSM);
        padding: $inputtext-padding-sm;

    }

    // &.p-inputtext-lg {
    //     @include scaledFontSize($inputTextFontSize, $scaleLG);
    //     @include scaledPadding($inputPadding, $scaleLG);
    // }
    
    //Add medium size
    &.p-inputtext-md {
        // height: $inputtext-height-md;
        padding: $inputtext-padding-md;
    }

    //Add filled state
    &.p-filled {
        &:hover {
            outline: $inputtext-border-size-1 solid $color-primary-2;
        }
        
        &:focus {
            outline: $inputtext-border-size-2 solid $color-primary-D3 !important;
            background-color: $color-neutral-L6;
        }
    }
}

.p-float-label > label {
    left: nth($inputtext-padding-lg, 2);
    color: $color-neutral-D4;
    transition-duration: $transitionDuration;

    &.inputtext-md {
        left: $inputtext-padding-md;
    }
    
    &.inputtext-sm {
        left: $inputtext-padding-sm;
    }
}

.p-float-label > .ng-invalid.ng-dirty + label {
    color: var(--red-500);
}

.p-input-icon-left > i:first-of-type {
    left: nth($inputtext-padding-lg, 2);
    color: $color-neutral-D4;
    
    &.inputtext-md {
        left: $inputtext-padding-md;
    }
    
    &.inputtext-sm {
        left: $inputtext-padding-sm;
    }
}

.p-input-icon-left > .p-inputtext {
    padding-left: nth($inputtext-padding-lg, 2) * 2 + $primeIconFontSize;
    
    &.inputtext-md {
        padding-left: nth($inputtext-padding-md, 2) * 2 + $primeIconFontSize;
    }
    
    &.inputtext-sm {
        padding-left: nth($inputtext-padding-sm, 2) * 2 + $primeIconFontSize;
    }
}

.p-input-icon-left.p-float-label > label {
    left: nth($inputtext-padding-lg, 2) * 2 + $primeIconFontSize;

    &.inputtext-md {
        left: nth($inputtext-padding-md, 2) * 2 + $primeIconFontSize;
    }
    
    &.inputtext-sm {
        left: nth($inputtext-padding-sm, 2) * 2 + $primeIconFontSize;
    }
}

.p-input-icon-right > i:last-of-type  {
    right: nth($inputtext-padding-lg, 2);
    color: $color-neutral-D4;

    &.inputtext-md {
        right: $inputtext-padding-md;
    }
    
    &.inputtext-sm {
        right: $inputtext-padding-sm;
    }
}

.p-input-icon-right > .p-inputtext {
    padding-right: nth($inputtext-padding-lg, 2) * 2 + $primeIconFontSize;

    &.inputtext-md {
        padding-right: nth($inputtext-padding-md, 2) * 2 + $primeIconFontSize;
    }
    
    &.inputtext-sm {
        padding-right: nth($inputtext-padding-sm, 2) * 2 + $primeIconFontSize;
    }
}

@include placeholder {
    color: $color-neutral-D4;
};

// .p-input-filled {
//     .p-inputtext {
//         background-color: $color-neutral-L6;

//         &:hover {
//             border: $inputtext-border-size-1 solid $color-primary-2;
//         }

//         &:focus {
//             border: $inputtext-border-size-2 solid $color-primary-3;
//         }
//     }
// }

.p-inputtext-sm {
    .p-inputtext {
        // @include scaledFontSize($inputTextFontSize, $scaleSM);
        // @include scaledPadding($inputPadding, $scaleSM);
        font-size: $fs-body2;
        line-height: $lh-body2;
        letter-spacing: $ls-body2;
        
        padding: $inputtext-padding-sm;
    }
}

// .p-inputtext-lg {
    //     .p-inputtext {
        //         @include scaledFontSize($inputTextFontSize, $scaleLG);
        //         @include scaledPadding($inputPadding, $scaleLG);
        //     }
        // }
//

//Add medium size
.p-inputtext-md {
    .p-inputtext {
        font-size: $fs-body1;
        line-height: $lh-body1;
        letter-spacing: $ls-body1;

        padding: $inputtext-padding-sm;
    }
}

:focus-visible{
    outline: 0 !important;
}