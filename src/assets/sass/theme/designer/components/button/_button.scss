.p-button {
    color: $color-neutral-L6;
    background: $color-primary-7;
    outline: transparent;
    border: none;
    height: $btn-height-lg;
    padding: 0 1rem;
    font-weight: $fw-label1;
    font-size: $fs-label1;
    line-height: $lh-label1;
    letter-spacing: $ls-label1;
    border-radius: $btn-border-rad-lg;
//    transition: $formElementTransition;

    &:hover {
        background: $color-primary-8;
    }
    
    &:active {
        background: $color-primary-9;
    }

    &.p-button-outlined {
        background: transparent;
        color: $color-primary-D6;
        outline: $btn-border-size-2 solid $color-primary-D6;

        &:hover {
            background: $color-primary-1;
        }
        
        &:active {
            background: $color-primary-2;
        }
        
        &:focus-visible {
            outline: $btn-border-size-3 solid $color-primary-D6 !important;
        }

        // &.p-button-plain {
        //     color: $color-primary-D6;
        //     outline: none;
            
        //     &:hover {
        //         background: $color-primary-1;
        //     }
            
        //     &:active {
        //         background: $color-primary-2;
        //     }
        // }
    }

    &.p-button-text {
        background-color: transparent;
        color: $color-primary-D6;
        border-color: transparent;

        &:hover {
            background: $color-primary-1;
        }

        &:active {  
            background: $color-primary-2;
        }

        &:focus-visible {
            outline: $btn-border-size-3 solid $color-primary-D1;
        }

        // &.p-button-plain {
        //     color: $plainButtonTextColor;

        //     &:hover {
        //         background: $plainButtonHoverBgColor;
        //         color: $plainButtonTextColor;
        //     }
    
        //     &:active {
        //         background: $plainButtonActiveBgColor;
        //         color: $plainButtonTextColor;
        //     }
        // }
    }

    &:focus-visible {
        outline: $btn-border-size-3 solid $color-primary-D1 !important;
    }

    // Add disabled state
    &:disabled {
        background: $color-neutral-M2;
        color: $color-neutral-M4;
    }

    .p-button-icon-left {
        
        margin-right: 0.5rem;
    }

    .p-button-icon-right {
        margin-left: 0.5rem;
    }

    // .p-button-icon-bottom {
    //     margin-top: $inlineSpacing;
    // }

    // .p-button-icon-top {
    //    margin-bottom: $inlineSpacing;
    // }

    // .p-badge {
    //     margin-left: $inlineSpacing;
    //     min-width: $fontSize;
    //     height: $fontSize;
    //     line-height: $fontSize;
    //     color: $buttonBg;
    //     background-color: $buttonTextColor; 
    // }

    // &.p-button-raised {
    //     box-shadow: $raisedButtonShadow;
    // }

    // &.p-button-rounded {
    //     border-radius: $roundedButtonBorderRadius;
    // }

    &.p-button-icon-only {
        width: 3rem;
        height: 3rem;
        // padding: $buttonIconOnlyPadding;

        .p-button-icon-left,
        .p-button-icon-right {
            margin: 0;
        }


        // &.p-button-rounded {
        //     border-radius: 50%;
        //     height: $buttonIconOnlyWidth;
        // }


    }
    
    // Add medium button size    
    &.p-button-md {
        height: $btn-height-md;
        font-weight: $fw-label2;
        font-size: $fs-label2;
        line-height: $lh-label2;
        letter-spacing: $ls-label2;
    }
    
    // Add small button size    
    &.p-button-sm {
        // @include scaledFontSize($fontSize, $scaleSM);
        // @include scaledPadding($buttonPadding, $scaleSM);

        // .p-button-icon {
        //     @include scaledFontSize($primeIconFontSize, $scaleSM);
        // }

        height: $btn-height-sm;
        border-radius: $btn-border-rad-lg;
        font-weight: $fw-label2;
        font-size: $fs-label2;
        line-height: $lh-label2;
        letter-spacing: $ls-label2;
    }

    // &.p-button-lg {
    //     @include scaledFontSize($fontSize, $scaleLG);
    //     @include scaledPadding($buttonPadding, $scaleLG);

    //     .p-button-icon {
    //         @include scaledFontSize($primeIconFontSize, $scaleLG);
    //     }
    // }


    &.p-button-loading-label-only {
        .p-button-label {
            margin-left: $inlineSpacing;
        }

        .p-button-loading-icon {
            margin-right: 0;
        }
    }
}

.p-fluid {
    .p-button {
        width: 100%;
    }
    
    .p-button-icon-only {
        width: $buttonIconOnlyWidth;
    }

    .p-buttonset {
        display: flex;
        
        .p-button {
            flex: 1;
        }
    }
}

/*

.p-button.p-button-secondary, .p-buttonset.p-button-secondary > .p-button, .p-splitbutton.p-button-secondary > .p-button {
    color: $secondaryButtonTextColor;
    background: $secondaryButtonBg;
    outline: $secondaryButtonBorder;

    &:hover {
        background: $secondaryButtonHoverBg;
        color: $secondaryButtonTextHoverColor;
        border-color: $secondaryButtonHoverBorderColor;
    }

    &:focus-visible {
        box-shadow: $secondaryButtonFocusShadow;
    }

    &:active {
        background: $secondaryButtonActiveBg;
        color: $secondaryButtonTextActiveColor;
        border-color: $secondaryButtonActiveBorderColor;
    }
    
    &.p-button-outlined {
        background-color: transparent;
        color: $secondaryButtonBg;
        outline: $outlinedButtonBorder;

        &:hover {
            background: rgba($secondaryButtonBg, $textButtonHoverBgOpacity);
            color: $secondaryButtonBg;
            outline: $outlinedButtonBorder;
        }

        &:active {
            background: rgba($secondaryButtonBg, $textButtonActiveBgOpacity);
            color: $secondaryButtonBg;
            outline: $outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: $secondaryButtonBg;
        border-color: transparent;

        &:hover {
            background: rgba($secondaryButtonBg, $textButtonHoverBgOpacity);
            border-color: transparent;
            color: $secondaryButtonBg;
        }

        &:active {
            background: rgba($secondaryButtonBg, $textButtonActiveBgOpacity);
            border-color: transparent;
            color: $secondaryButtonBg;
        }
    }
}

.p-button.p-button-info, .p-buttonset.p-button-info > .p-button, .p-splitbutton.p-button-info > .p-button {
    color: $infoButtonTextColor;
    background: $infoButtonBg;
    outline: $infoButtonBorder;

    &:hover {
        background: $infoButtonHoverBg;
        color: $infoButtonTextHoverColor;
        border-color: $infoButtonHoverBorderColor;
    }

    &:focus-visible {
        box-shadow: $infoButtonFocusShadow;
    }

    &:active {
        background: $infoButtonActiveBg;
        color: $infoButtonTextActiveColor;
        border-color: $infoButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: $infoButtonBg;
        outline: $outlinedButtonBorder;

        &:hover {
            background: rgba($infoButtonBg, $textButtonHoverBgOpacity);
            color: $infoButtonBg;
            outline: $outlinedButtonBorder;
        }

        &:active {
            background: rgba($infoButtonBg, $textButtonActiveBgOpacity);
            color: $infoButtonBg;
            outline: $outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: $infoButtonBg;
        border-color: transparent;

        &:hover {
            background: rgba($infoButtonBg, $textButtonHoverBgOpacity);
            border-color: transparent;
            color: $infoButtonBg;
        }

        &:active {
            background: rgba($infoButtonBg, $textButtonActiveBgOpacity);
            border-color: transparent;
            color: $infoButtonBg;
        }
    }
}

.p-button.p-button-success, .p-buttonset.p-button-success > .p-button, .p-splitbutton.p-button-success > .p-button {
    color: $successButtonTextColor;
    background: $successButtonBg;
    outline: $successButtonBorder;

    &:hover {
        background: $successButtonHoverBg;
        color: $successButtonTextHoverColor;
        border-color: $successButtonHoverBorderColor;
    }

    &:focus-visible {
        box-shadow: $successButtonFocusShadow;
    }

    &:active {
        background: $successButtonActiveBg;
        color: $successButtonTextActiveColor;
        border-color: $successButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: $successButtonBg;
        outline: $outlinedButtonBorder;

        &:hover {
            background: rgba($successButtonBg, $textButtonHoverBgOpacity);
            color: $successButtonBg;
            outline: $outlinedButtonBorder;
        }

        &:active {
            background: rgba($successButtonBg, $textButtonActiveBgOpacity);
            color: $successButtonBg;
            outline: $outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: $successButtonBg;
        border-color: transparent;

        &:hover {
            background: rgba($successButtonBg, $textButtonHoverBgOpacity);
            border-color: transparent;
            color: $successButtonBg;
        }

        &:active {
            background: rgba($successButtonBg, $textButtonActiveBgOpacity);
            border-color: transparent;
            color: $successButtonBg;
        }
    }
}

.p-button.p-button-warning, .p-buttonset.p-button-warning > .p-button, .p-splitbutton.p-button-warning > .p-button {
    color: $warningButtonTextColor;
    background: $warningButtonBg;
    outline: $warningButtonBorder;
    
    &:hover {
        background: $warningButtonHoverBg;
        color: $warningButtonTextHoverColor;
        border-color: $warningButtonHoverBorderColor;
    }

    &:focus-visible {
        box-shadow: $warningButtonFocusShadow;
    }

    &:active {
        background: $warningButtonActiveBg;
        color: $warningButtonTextActiveColor;
        border-color: $warningButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: $warningButtonBg;
        outline: $outlinedButtonBorder;

        &:hover {
            background: rgba($warningButtonBg, $textButtonHoverBgOpacity);
            color: $warningButtonBg;
            outline: $outlinedButtonBorder;
        }

        &:active {
            background: rgba($warningButtonBg, $textButtonActiveBgOpacity);
            color: $warningButtonBg;
            outline: $outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: $warningButtonBg;
        border-color: transparent;

        &:hover {
            background: rgba($warningButtonBg, $textButtonHoverBgOpacity);
            border-color: transparent;
            color: $warningButtonBg;
        }

        &:active {
            background: rgba($warningButtonBg, $textButtonActiveBgOpacity);
            border-color: transparent;
            color: $warningButtonBg;
        }
    }
}

.p-button.p-button-help, .p-buttonset.p-button-help > .p-button, .p-splitbutton.p-button-help > .p-button {
    color: $helpButtonTextColor;
    background: $helpButtonBg;
    outline: $helpButtonBorder;

    &:hover {
        background: $helpButtonHoverBg;
        color: $helpButtonTextHoverColor;
        border-color: $helpButtonHoverBorderColor;
    }

    &:focus-visible {
        box-shadow: $helpButtonFocusShadow;
    }

    &:active {
        background: $helpButtonActiveBg;
        color: $helpButtonTextActiveColor;
        border-color: $helpButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: $helpButtonBg;
        outline: $outlinedButtonBorder;

        &:hover {
            background: rgba($helpButtonBg, $textButtonHoverBgOpacity);
            color: $helpButtonBg;
            outline: $outlinedButtonBorder;
        }

        &:active {
            background: rgba($helpButtonBg, $textButtonActiveBgOpacity);
            color: $helpButtonBg;
            outline: $outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: $helpButtonBg;
        border-color: transparent;

        &:hover {
            background: rgba($helpButtonBg, $textButtonHoverBgOpacity);
            border-color: transparent;
            color: $helpButtonBg;
        }

        &:active {
            background: rgba($helpButtonBg, $textButtonActiveBgOpacity);
            border-color: transparent;
            color: $helpButtonBg;
        }
    }
}

*/
.p-button.p-button-danger, .p-buttonset.p-button-danger > .p-button, .p-splitbutton.p-button-danger > .p-button {
    color: $color-neutral-L6;
    background: var(--red-600);

    &:hover {
        background: var(--red-700);
    }

    &:focus-visible {
        outline: $btn-border-size-3 solid var(--red-300) !important;
    }

    &:active {
        background: var(--red-800);
    }

    &.p-button-outlined {
        background-color: transparent;
        color: var(--red-800);
        outline: $btn-border-size-2 solid var(--red-800);

        &:hover {
            background: var(--red-50);
        }
        
        &:active {
            background: var(--red-100);
        }

        // Add focused state
        &:focus-visible {
            background-color: var(--red-50);
            outline: $btn-border-size-3 solid var(--red-800) !important;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: var(--red-700);
        border-color: transparent;
        
        &:hover {
            background: var(--red-50);
            color: var(--red-800);
            border-color: transparent;
        }
        
        &:active {
            background: var(--red-100);
            color: $dangerButtonBg;
            border-color: transparent;
        }
        
        // Add focused state
        &:focus-visible {
            background-color: transparent;
            color: var(--red-700);
            outline: $btn-border-size-3 solid var(--red-700) !important;
        }
    }
    
    // Add disabled state
    &:disabled {
        color: $color-neutral-L6;
        background-color: $color-neutral-M3;
    }
}

.p-button.p-button-link {
    color: $color-neutral-D6;
    background: transparent;
    outline: transparent;
    text-decoration: underline solid $color-neutral-D6 0.125rem;

    &:hover {
        color: $color-primary-5;
        .p-button-label {
            text-decoration: underline solid $color-primary-6 0.125rem;
        }
    }
    
    &:focus-visible {
        color: $color-primary-6;
        text-decoration: underline solid $color-primary-6 0.125rem;
    }

    &:active {
        background:  transparent;
        color: $linkButtonColor;
        border-color:  transparent;
    }
}

:focus-visible{
    outline: 0 !important;
}